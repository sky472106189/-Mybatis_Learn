<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myself.Dao.TeacherMapper">
    <!--按结果嵌套查询(常用) 输入老师ID查旗下所有学生-->
    <select id="getTeacher" resultMap="TeacherStudent">
        select t.id as tid,t.name as tname,s.name as sname
        from teacher t,student s
        where t.id = s.tid
        and t.id =#{tid}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--复杂的属性需要单独处理
              对象:association
              集合:collection
            javaType:指定属性的类型.
            集合中的泛型信息,我们使用ofType获取
        -->
        <!--private List<Student> students;
            students 老师类里面的变量名，<Student>是泛型，一一对应-->
        <collection property="students" ofType="Student">
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

    <!--按照查询结果方式-->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from teacher where id=#{tid};
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTid" column="id"/>
    </resultMap>
    <select id="getStudentByTid" resultType="Student">
        select * from student where tid = #{tid};
    </select>
</mapper>